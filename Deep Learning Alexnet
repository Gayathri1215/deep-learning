{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1a9nPDNxO3MXDPpnDGrWrqhtBMOHgnUdp","timestamp":1728558199884}],"authorship_tag":"ABX9TyNyk8gFhCHfmQKO0nsTQJlK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8K6hCC42DPVL","executionInfo":{"status":"ok","timestamp":1728579318141,"user_tz":-330,"elapsed":10451,"user":{"displayName":"GAYATHRI B 2022-2026","userId":"14744665702381584186"}},"outputId":"3c03e17a-1cc3-4aae-ffec-c43b2eb751d6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (2.4.1+cu121)\n","Requirement already satisfied: torchvision in /usr/local/lib/python3.10/dist-packages (0.19.1+cu121)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch) (3.16.1)\n","Requirement already satisfied: typing-extensions>=4.8.0 in /usr/local/lib/python3.10/dist-packages (from torch) (4.12.2)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch) (1.13.3)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch) (3.3)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch) (3.1.4)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch) (2024.6.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from torchvision) (1.26.4)\n","Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.10/dist-packages (from torchvision) (10.4.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch) (2.1.5)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy->torch) (1.3.0)\n"]}],"source":["!pip install torch torchvision\n"]},{"cell_type":"code","source":["import torch\n","import torch.nn as nn\n","import torchvision.transforms as transforms\n","import torchvision.datasets as datasets\n","import torch.optim as optim\n","from torch.utils.data import DataLoader\n"],"metadata":{"id":"MADBmousDbrq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class AlexNet(nn.Module):\n","    def __init__(self, num_classes=1000):\n","        super(AlexNet, self).__init__()\n","        self.features = nn.Sequential(\n","            nn.Conv2d(3, 64, kernel_size=11, stride=4, padding=2),\n","            nn.ReLU(inplace=True),\n","            nn.MaxPool2d(kernel_size=3, stride=2),\n","            nn.Conv2d(64, 192, kernel_size=5, padding=2),\n","            nn.ReLU(inplace=True),\n","            nn.MaxPool2d(kernel_size=3, stride=2),\n","            nn.Conv2d(192, 384, kernel_size=3, padding=1),\n","            nn.ReLU(inplace=True),\n","            nn.Conv2d(384, 256, kernel_size=3, padding=1),\n","            nn.ReLU(inplace=True),\n","            nn.Conv2d(256, 256, kernel_size=3, padding=1),\n","            nn.ReLU(inplace=True),\n","            nn.MaxPool2d(kernel_size=3, stride=2),\n","        )\n","        self.classifier = nn.Sequential(\n","            nn.Dropout(),\n","            nn.Linear(256 * 6 * 6, 4096),\n","            nn.ReLU(inplace=True),\n","            nn.Dropout(),\n","            nn.Linear(4096, 4096),\n","            nn.ReLU(inplace=True),\n","            nn.Linear(4096, num_classes),\n","        )\n","\n","    def forward(self, x):\n","        x = self.features(x)\n","        x = x.view(x.size(0), 256 * 6 * 6)  # Flatten\n","        x = self.classifier(x)\n","        return x\n"],"metadata":{"id":"6B1_ZRvCDhIs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Define transformations for the training set\n","transform = transforms.Compose([\n","    transforms.Resize(256),\n","    transforms.CenterCrop(224),\n","    transforms.ToTensor(),\n","    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),\n","])\n","\n","# Load CIFAR-10 dataset\n","train_dataset = datasets.CIFAR10(root='./data', train=True, download=True, transform=transform)\n","train_loader = DataLoader(train_dataset, batch_size=64, shuffle=True)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5qPEz0FLDlRk","executionInfo":{"status":"ok","timestamp":1728557512706,"user_tz":-330,"elapsed":5699,"user":{"displayName":"GAYATHRI B 2022-2026","userId":"14744665702381584186"}},"outputId":"03b5ce16-8d3d-4d20-d7e6-41f19291ca78"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ./data/cifar-10-python.tar.gz\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 170498071/170498071 [00:01<00:00, 93373779.92it/s]\n"]},{"output_type":"stream","name":"stdout","text":["Extracting ./data/cifar-10-python.tar.gz to ./data\n"]}]},{"cell_type":"code","source":["device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","model = AlexNet(num_classes=10).to(device)\n","criterion = nn.CrossEntropyLoss()\n","optimizer = optim.SGD(model.parameters(), lr=0.01, momentum=0.9)\n"],"metadata":{"id":"bCZgTKJeDq59"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["try:\n","    # Test a single batch\n","    images, labels = next(iter(train_loader))\n","    images, labels = images.to(device), labels.to(device)\n","\n","    # Forward pass\n","    outputs = model(images)\n","    loss = criterion(outputs, labels)\n","\n","    # Backward pass and optimization\n","    optimizer.zero_grad()\n","    loss.backward()\n","    optimizer.step()\n","\n","    print(f'Loss for single batch: {loss.item():.4f}')\n","\n","except Exception as e:\n","    print(f\"An error occurred: {e}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6oL2YdhwF6vu","executionInfo":{"status":"ok","timestamp":1728558126344,"user_tz":-330,"elapsed":7477,"user":{"displayName":"GAYATHRI B 2022-2026","userId":"14744665702381584186"}},"outputId":"d9cdb7a2-e07c-467d-b471-6fa2ee3e7245"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Loss for single batch: 2.3076\n"]}]},{"cell_type":"code","source":["torch.save(model.state_dict(), 'alexnet_cifar10.pth')\n"],"metadata":{"id":"uxkzl3_NGB4R"},"execution_count":null,"outputs":[]}]}